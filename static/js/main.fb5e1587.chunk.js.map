{"version":3,"sources":["components/Nav.js","components/LoadingScreen.js","components/Jokes.js","components/Explore.js","components/MyComponent.js","components/Quiz.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["Nav","class","className","to","LoadingScreen","Jokes","useState","error","setError","isLoaded","setIsLoaded","items","setItems","useEffect","fetch","then","res","json","result","message","map","item","setup","punchline","Explore","MyComponent","i","question","type","name","value","opt0","opt1","opt2","opt3","Quiz","Home","src","alt","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.fb5e1587.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Nav() {\r\n  return (\r\n     <>\r\n      <div class = 'w3-card w3-hide-small'>\r\n       <nav className = \"w3-row\">\r\n             <Link className = 'w3-col  w3-pale-yellow no-td' to = \"/explore\">\r\n              <p>Explore</p>\r\n             </Link>\r\n             <Link className = 'w3-col w3-pale-red no-td'  to =\"/\">\r\n                <p>Home</p>\r\n             </Link>\r\n             <Link className = 'w3-col w3-pale-green no-td' to = \"/quiz\">\r\n              <p>Quiz</p>\r\n             </Link>\r\n       </nav>\r\n       </div>\r\n       \r\n       \r\n       \r\n       <div class = 'w3-bottom w3-hide-large w3-hide-medium w3-card'>\r\n       <nav className = \"w3-row\">\r\n             <Link className = 'w3-col  w3-pale-yellow no-td' to = \"/explore\">\r\n              <p>Explore</p>\r\n             </Link>\r\n             <Link className = 'w3-col w3-pale-red no-td'  to =\"/\">\r\n                <p>Home</p>\r\n             </Link>\r\n             <Link className = 'w3-col w3-pale-green no-td' to = \"/quiz\">\r\n              <p>Quiz</p>\r\n             </Link>\r\n       </nav>\r\n       </div>\r\n       </>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport '../App.css';\r\nimport Jokes from './Jokes';\r\n\r\nfunction LoadingScreen() {\r\n  return (\r\n    <div>\r\n    \r\n    <br/>\r\n    <br/>\r\n    <br/>\r\n     <br/>\r\n    <br/>\r\n    <br/>\r\n          <h1>Loading.....</h1>\r\n     <br/>\r\n    <br/>\r\n    <br/>\r\n     <br/>\r\n    <br/>\r\n    <br/>\r\n     <br/>\r\n    <br/>\r\n    <br/>\r\n     <br/>\r\n    <br/>\r\n     <br/>\r\n    <br/>\r\n    <br/>\r\n     <br/>\r\n    <br/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingScreen;","import React, { useState, useEffect } from \"react\";\r\nimport LoadingScreen from './LoadingScreen';\r\n\r\nfunction Jokes() {\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [items, setItems] = useState([]);\r\n  useEffect(() => {\r\n    fetch(\"https://official-joke-api.appspot.com/random_ten\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setIsLoaded(true);\r\n          setItems(result);\r\n        },\r\n        \r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      )\r\n  }, [])\r\n  \r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (!isLoaded) {\r\n    return <div>\r\n                  <LoadingScreen />\r\n             </div>;\r\n  } else {\r\n    return (\r\n      <div>\r\n       {items.map(item => (\r\n       <div>\r\n           <div className = 'w3-light-grey w3-left-align w3-card w3-container'>\r\n               <h4>{item.setup}</h4>\r\n               ..\r\n               <h4>{item.punchline}</h4>\r\n               <p>ðŸ˜‚ðŸ¤£</p>\r\n               <p/>\r\n           </div>\r\n           <br />\r\n           </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Jokes","import React from 'react';\r\nimport '../App.css';\r\nimport Jokes from './Jokes';\r\n\r\nfunction Explore() {\r\n  return (\r\n    <div className='bm w3-panel w3-card w3-pale-yellow'>\r\n    <h3 >Explore Page</h3>\r\n     <Jokes />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Explore;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport LoadingScreen from './LoadingScreen';\r\n\r\nfunction MyComponent() {\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [items, setItems] = useState([]);\r\n var i =1;\r\n  useEffect(() => {\r\n    fetch(\"https://api.steinhq.com/v1/storages/5f37792b5d3cdc44fcd7d30b/da\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setIsLoaded(true);\r\n          setItems(result);\r\n        },\r\n        \r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      )\r\n  }, [])\r\n  \r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (!isLoaded) {\r\n    return<div>\r\n     <LoadingScreen />\r\n           </div>;\r\n  } else {\r\n    return (\r\n      <div>\r\n       {items.map(item => (\r\n       <div>\r\n           <div className = 'w3-white w3-left-align w3-card w3-container'>\r\n               <h4>{i++}. {item.question}</h4>\r\n               <input class=\"w3-radio\" type=\"radio\" name={`'opt'+${i}`} value=\"\"/>\r\n               <label> {item.opt0}<br /></label>\r\n               <input class=\"w3-radio\" type=\"radio\" name={`'opt'+${i}`} value=\"\"/>\r\n               <label> {item.opt1}<br /></label>\r\n               <input class=\"w3-radio\" type=\"radio\" name={`'opt'+${i}`} value=\"\"/>\r\n               <label> {item.opt2} <br/></label>\r\n               <input class=\"w3-radio\" type=\"radio\" name={`'opt'+${i}`} value=\"\"/>\r\n               <label> {item.opt3}</label>\r\n               <p/>\r\n           </div>\r\n           <br />\r\n           </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyComponent","import React from 'react';\r\nimport '../App.css';\r\nimport MyComponent from './MyComponent.js';\r\nfunction Quiz() {\r\n  return (\r\n    <div className='bm w3-panel w3-card w3-pale-green'>\r\n    <h3>Quiz Page</h3>\r\n    <MyComponent />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n","import React from 'react';\r\nimport '../App.css';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className='bm w3-panel w3-card w3-pale-red'>\r\n    <h3>Home Page</h3>\r\n      <br/>\r\n    <br/>\r\n     <br/>\r\n    <br/>\r\n    <img className = 'small' src = 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRVUn_F7WVP6dEVe86EhWzt8nFoZ1iHMA1Yjg&usqp=CAU' alt = ''/>\r\n    <p/>\r\n    <h2>Jaldi Aa Raha Hai</h2>\r\n    <br/>\r\n    <br/>\r\n    <br/>\r\n     <br/>\r\n    <br/>\r\n    <br/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport './App.css';\nimport Nav from './components/Nav';\nimport Explore from './components/Explore';\nimport Quiz from './components/Quiz';\nimport Home from './components/Home.js';\nimport {BrowserRouter as Router, Switch, Route} from  'react-router-dom';\n\nfunction App() {\n  return (\n  <Router>\n    <div className=\"App\">\n      <Nav />\n      <Switch>\n         <Route path = '/' exact component = {Home} />\n         <Route path = '/explore' component = {Explore} />\n         <Route path = '/quiz' component = {Quiz} />\n      </Switch>\n    </div>\n   </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}